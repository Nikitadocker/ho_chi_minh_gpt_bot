{
  "version": 4,
  "terraform_version": "1.4.7",
  "serial": 19,
  "lineage": "a912f961-4383-405f-e260-8889c39e2b1d",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "grafana",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "grafana",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "grafana",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "10.4.1",
                "chart": "grafana",
                "name": "grafana",
                "namespace": "grafana",
                "revision": 1,
                "values": "{\"datasources\":{\"datasources.yaml\":{\"apiVersion\":1,\"datasources\":[{\"access\":\"proxy\",\"isDefault\":true,\"name\":\"Loki\",\"type\":\"loki\",\"url\":\"http://loki-gateway.loki:80\"}]}},\"persistence\":{\"accessModes\":[\"ReadWriteOnce\"],\"enabled\":true,\"size\":\"1Gi\",\"storageClassName\":\"do-block-storage\",\"type\":\"pvc\"}}",
                "version": "7.3.9"
              }
            ],
            "name": "grafana",
            "namespace": "grafana",
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://grafana.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "persistence:\n  type: pvc\n  enabled: true\n  storageClassName: do-block-storage\n  accessModes:\n    - ReadWriteOnce\n  size: 1Gi\n\ndatasources:\n  datasources.yaml:\n    apiVersion: 1\n    datasources:\n    - name: Loki\n      type: loki\n      url: http://loki-gateway.loki:80\n      access: proxy\n      isDefault: true"
            ],
            "verify": false,
            "version": "7.3.9",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "ingress-controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "ingress-nginx",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "nginx-ingress",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.10.1",
                "chart": "ingress-nginx",
                "name": "nginx-ingress",
                "namespace": "ingress-controller",
                "revision": 1,
                "values": "{\"controller\":{\"publishService\":{\"enabled\":true}}}",
                "version": "4.10.1"
              }
            ],
            "name": "nginx-ingress",
            "namespace": "ingress-controller",
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://kubernetes.github.io/ingress-nginx",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "controller:\n  publishService:\n    enabled: true\n"
            ],
            "verify": false,
            "version": "4.10.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "postgres",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "postgresql",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "postgres",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "16.2.0",
                "chart": "postgresql",
                "name": "postgres",
                "namespace": "postgres",
                "revision": 1,
                "values": "{\"primary\":{\"initdb\":{\"scripts\":{\"custom_db_setup.sh\":\"#!/bin/bash\\nexport PGPASSWORD=$POSTGRES_PASSWORD\\npsql -U postgres -c 'CREATE DATABASE \\\"comrade-chatgpt-bot-db\\\";'\\npsql -U postgres -c 'CREATE DATABASE \\\"comrade-ho-chi-minh-db\\\";'\\npsql -U postgres -c 'CREATE DATABASE \\\"Germes_DB\\\";'\\n\"}},\"persistence\":{\"size\":\"1Gi\",\"storageClass\":\"do-block-storage\"}}}",
                "version": "15.2.5"
              }
            ],
            "name": "postgres",
            "namespace": "postgres",
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.bitnami.com/bitnami",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "primary:\n  persistence:\n    size: 1Gi\n    storageClass: do-block-storage\n  initdb:\n    scripts:\n      custom_db_setup.sh: |\n        #!/bin/bash\n        export PGPASSWORD=$POSTGRES_PASSWORD\n        psql -U postgres -c 'CREATE DATABASE \"comrade-chatgpt-bot-db\";'\n        psql -U postgres -c 'CREATE DATABASE \"comrade-ho-chi-minh-db\";'\n        psql -U postgres -c 'CREATE DATABASE \"Germes_DB\";'\n"
            ],
            "verify": false,
            "version": "15.2.5",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "prometheus",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "kube-prometheus-stack",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "prometheus",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v0.74.0",
                "chart": "kube-prometheus-stack",
                "name": "prometheus",
                "namespace": "monitoring",
                "revision": 1,
                "values": "{\"alertmanager\":{\"enabled\":false},\"grafana\":{\"enabled\":false},\"kube-state-metrics\":{\"enabled\":true},\"nodeExporter\":{\"enabled\":true},\"prometheus\":{\"enabled\":true,\"prometheusSpec\":{\"storageSpec\":{\"volumeClaimTemplate\":{\"spec\":{\"accessModes\":[\"ReadWriteOnce\"],\"resources\":{\"requests\":{\"storage\":\"2Gi\"}},\"storageClassName\":\"do-block-storage\"}}}}}}",
                "version": "59.1.0"
              }
            ],
            "name": "prometheus",
            "namespace": "monitoring",
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://prometheus-community.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "alertmanager:\n  enabled: false\ngrafana:\n  enabled: false\nkube-state-metrics:\n  enabled: true\nnodeExporter:\n  enabled: true\nprometheus:\n  enabled: true\n  prometheusSpec:\n    storageSpec:\n      volumeClaimTemplate:\n        spec:\n          accessModes:\n          - ReadWriteOnce\n          resources:\n            requests:\n              storage: 2Gi\n          storageClassName: do-block-storage"
            ],
            "verify": false,
            "version": "59.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "promtail",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "promtail",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "promtail",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "2.9.3",
                "chart": "promtail",
                "name": "promtail",
                "namespace": "promtail",
                "revision": 1,
                "values": "{\"config\":{\"clients\":[{\"url\":\"http://loki-gateway.loki/loki/api/v1/push\"}],\"snippets\":{\"scrapeConfigs\":\"- job_name: kubernetes-pods\\n  pipeline_stages:\\n    {{- toYaml .Values.config.snippets.pipelineStages | nindent 4 }}\\n    - match:\\n        selector: '{app=~\\\"telegram-bot|user-manager\\\",stream=~\\\"stdout|stderr\\\"}'\\n        stages:\\n          - logfmt:\\n              mapping:\\n                at: at\\n                process: process\\n                logger: logger\\n          - labels:\\n              at: \\\"\\\"\\n              process: \\\"\\\"\\n              logger: \\\"\\\"\\n  kubernetes_sd_configs:\\n    - role: pod\\n  relabel_configs:\\n    - source_labels:\\n        - __meta_kubernetes_pod_controller_name\\n      regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?\\n      action: replace\\n      target_label: __tmp_controller_name\\n    - source_labels:\\n        - __meta_kubernetes_pod_label_app_kubernetes_io_name\\n        - __meta_kubernetes_pod_label_app\\n        - __tmp_controller_name\\n        - __meta_kubernetes_pod_name\\n      regex: ^;*([^;]+)(;.*)?$\\n      action: replace\\n      target_label: app\\n    - source_labels:\\n        - __meta_kubernetes_pod_label_app_kubernetes_io_instance\\n        - __meta_kubernetes_pod_label_instance\\n      regex: ^;*([^;]+)(;.*)?$\\n      action: replace\\n      target_label: instance\\n    - source_labels:\\n        - __meta_kubernetes_pod_label_app_kubernetes_io_component\\n        - __meta_kubernetes_pod_label_component\\n      regex: ^;*([^;]+)(;.*)?$\\n      action: replace\\n      target_label: component\\n    {{- if .Values.config.snippets.addScrapeJobLabel }}\\n    - replacement: kubernetes-pods\\n      target_label: scrape_job\\n    {{- end }}\\n    {{- toYaml .Values.config.snippets.common | nindent 4 }}\\n    {{- with .Values.config.snippets.extraRelabelConfigs }}\\n    {{- toYaml . | nindent 4 }}\\n    {{- end }}\\n\"}}}",
                "version": "6.15.5"
              }
            ],
            "name": "promtail",
            "namespace": "promtail",
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://grafana.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "config:\n  clients:\n    - url: http://loki-gateway.loki/loki/api/v1/push\n  snippets:\n    scrapeConfigs: |\n      - job_name: kubernetes-pods\n        pipeline_stages:\n          {{- toYaml .Values.config.snippets.pipelineStages | nindent 4 }}\n          - match:\n              selector: '{app=~\"telegram-bot|user-manager\",stream=~\"stdout|stderr\"}'\n              stages:\n                - logfmt:\n                    mapping:\n                      at: at\n                      process: process\n                      logger: logger\n                - labels:\n                    at: \"\"\n                    process: \"\"\n                    logger: \"\"\n        kubernetes_sd_configs:\n          - role: pod\n        relabel_configs:\n          - source_labels:\n              - __meta_kubernetes_pod_controller_name\n            regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?\n            action: replace\n            target_label: __tmp_controller_name\n          - source_labels:\n              - __meta_kubernetes_pod_label_app_kubernetes_io_name\n              - __meta_kubernetes_pod_label_app\n              - __tmp_controller_name\n              - __meta_kubernetes_pod_name\n            regex: ^;*([^;]+)(;.*)?$\n            action: replace\n            target_label: app\n          - source_labels:\n              - __meta_kubernetes_pod_label_app_kubernetes_io_instance\n              - __meta_kubernetes_pod_label_instance\n            regex: ^;*([^;]+)(;.*)?$\n            action: replace\n            target_label: instance\n          - source_labels:\n              - __meta_kubernetes_pod_label_app_kubernetes_io_component\n              - __meta_kubernetes_pod_label_component\n            regex: ^;*([^;]+)(;.*)?$\n            action: replace\n            target_label: component\n          {{- if .Values.config.snippets.addScrapeJobLabel }}\n          - replacement: kubernetes-pods\n            target_label: scrape_job\n          {{- end }}\n          {{- toYaml .Values.config.snippets.common | nindent 4 }}\n          {{- with .Values.config.snippets.extraRelabelConfigs }}\n          {{- toYaml . | nindent 4 }}\n          {{- end }}\n"
            ],
            "verify": false,
            "version": "6.15.5",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.cert_manager",
      "mode": "managed",
      "type": "helm_release",
      "name": "cert_manager",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "cert-manager",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "cert-manager",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v1.11.0",
                "chart": "cert-manager",
                "name": "cert-manager",
                "namespace": "cert-manager",
                "revision": 1,
                "values": "{\"installCRDs\":true}",
                "version": "v1.11.0"
              }
            ],
            "name": "cert-manager",
            "namespace": "cert-manager",
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.jetstack.io",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "installCRDs",
                "type": "",
                "value": "true"
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "v1.11.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.cert_manager.kubernetes_namespace.cert_manager"
          ]
        }
      ]
    },
    {
      "module": "module.cert_manager",
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "cluster_issuer",
      "provider": "provider[\"registry.terraform.io/alekc/kubectl\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "api_version": "cert-manager.io/v1",
            "apply_only": false,
            "field_manager": "kubectl",
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/cert-manager.io/v1/clusterissuers/letsencrypt-prod",
            "ignore_fields": null,
            "kind": "ClusterIssuer",
            "live_manifest_incluster": "51550eb53e6811b32cc409bca48d1dacf55e0e6c41e659149cf98a5af402cea8",
            "live_uid": "4c7f4fdb-6558-49e9-afa4-885f75005c3f",
            "name": "letsencrypt-prod",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "4c7f4fdb-6558-49e9-afa4-885f75005c3f",
            "validate_schema": false,
            "wait": null,
            "wait_for": [],
            "wait_for_rollout": true,
            "yaml_body": "\"apiVersion\": \"cert-manager.io/v1\"\n\"kind\": \"ClusterIssuer\"\n\"metadata\":\n  \"name\": \"letsencrypt-prod\"\n\"spec\":\n  \"acme\":\n    \"email\": \"neketa51993@gmail.com\"\n    \"preferredChain\": \"ISRG Root X1\"\n    \"privateKeySecretRef\":\n      \"name\": \"cert-manager-private-key\"\n    \"server\": \"https://acme-v02.api.letsencrypt.org/directory\"\n    \"solvers\":\n    - \"http01\":\n        \"ingress\":\n          \"class\": \"nginx\"\n",
            "yaml_body_parsed": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    email: neketa51993@gmail.com\n    preferredChain: ISRG Root X1\n    privateKeySecretRef:\n      name: cert-manager-private-key\n    server: https://acme-v02.api.letsencrypt.org/directory\n    solvers:\n    - http01:\n        ingress:\n          class: nginx\n",
            "yaml_incluster": "51550eb53e6811b32cc409bca48d1dacf55e0e6c41e659149cf98a5af402cea8"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.cert_manager.helm_release.cert_manager",
            "module.cert_manager.kubernetes_namespace.cert_manager",
            "module.cert_manager.time_sleep.wait"
          ]
        }
      ]
    },
    {
      "module": "module.cert_manager",
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "cert_manager",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "cert-manager",
            "metadata": [
              {
                "annotations": {
                  "name": "cert-manager"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "cert-manager",
                "resource_version": "4458",
                "self_link": "",
                "uid": "bdcc4d67-ec4f-4965-a595-11c9e6712154"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "module": "module.cert_manager",
      "mode": "managed",
      "type": "time_sleep",
      "name": "wait",
      "provider": "provider[\"registry.terraform.io/hashicorp/time\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "create_duration": "60s",
            "destroy_duration": null,
            "id": "2024-06-02T14:54:40Z",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.cert_manager.helm_release.cert_manager",
            "module.cert_manager.kubernetes_namespace.cert_manager"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
