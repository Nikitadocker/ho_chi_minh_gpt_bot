apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "telegram-bot.fullname" . }}
  labels:
    {{- include "telegram-bot.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "telegram-bot.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "telegram-bot.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
        - name: liquibase
          image: {{ .Values.image.repository }}:telegram_bot_liquibase_{{ .Values.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: [
            "--changeLogFile=initial.postgres.yaml",
            "--url=jdbc:postgresql://$(DB_HOST):5432/$(POSTGRES_DB)",
            "update"
          ]
          env:
            - name: LIQUIBASE_COMMAND_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: POSTGRES_USER
            - name: LIQUIBASE_COMMAND_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: POSTGRES_DB
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: DB_HOST

      containers:
        - name: telegram-bot
          image: {{ .Values.image.repository }}:telegram_bot_{{ .Values.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 5000
              name: healthcheck
            - containerPort: 8443
              name: webhook
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: healthcheck
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 1
          volumeMounts:
          - name: images-volume
            mountPath: /images
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: POSTGRES_DB
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: DB_HOST
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: OPENAI_API_KEY
            - name: TELEGRAM_BOT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: TELEGRAM_BOT_TOKEN
            - name: IMAGE_PRICE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: IMAGE_PRICE
            - name: MODE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: MODE
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
      volumes:
      - name: images-volume
        emptyDir:
          sizeLimit: 100Mi