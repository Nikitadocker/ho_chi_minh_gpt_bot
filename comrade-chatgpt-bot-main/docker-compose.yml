version: "3.9"

volumes:
  logs_volume: {}
  images_volume: {}
  postgres_data: {}
  loki_data: {}

services:
  telegram-bot:
    build:
      context: ./telegram_bot
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DB_HOST: ${DB_HOST}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      IMAGE_PRICE: ${IMAGE_PRICE}
    volumes:
      - logs_volume:/app/logs
      - images_volume:/app/images

  unit-test:
    build:
      context: ./telegram_bot
    command: python3 test.py
    # command: python3 test-openai.py
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DB_HOST: ${DB_HOST}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      IMAGE_PRICE: ${IMAGE_PRICE}



  # http://loki-local:3100
  loki-local:
    image: grafana/loki:2.9.5
    user: "0"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki/data/
      - ./loki/local-config.yaml:/etc/loki/local-config.yaml

  grafana:
      image: grafana/grafana:10.2.0
      ports:
        - "3000:3000"
      volumes:
        - ./grafana/provisioning:/etc/grafana/provisioning
      depends_on:
        - loki-local
      # env_file:
      #   - ./grafana/.env
      environment:
        GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}


  promtail:
    image: grafana/promtail:2.9.3
    volumes:
      - logs_volume:/logs
      - ./promtail:/etc/promtail
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki-local

  postgres:
    image: postgres:16.2
    command: ["-c", "log_statement=ddl"]
    # command: ["-c", "shared_buffers=256MB", "-c", "max_connections=200"]
    ports:
      - "5432:5432"
    # ports:
    #   - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  liquibase:
    build: ./liquibase
    command: [
      "--changeLogFile=initial.postgres.yaml",
      "--url=jdbc:postgresql://${DB_HOST}:5432/${POSTGRES_DB}",
      "update"
    ]
    environment:
      LIQUIBASE_COMMAND_USERNAME: ${POSTGRES_USER}
      LIQUIBASE_COMMAND_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - postgres


  user-manager:
    build:
      context: ./user_manager
    environment:
      FLASK_APP: manager.py
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DB_HOST: ${DB_HOST}
      FLASK_SECRET_KEY: ${FLASK_SECRET_KEY}
    volumes:
      - logs_volume:/usr/src/app/logs
    ports:
      - "5005:5000"
    depends_on:
      - postgres